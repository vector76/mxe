This file is part of MXE.
See index.html for further information.

From 051edee4feb365a0f79fa971c7bf95dfe2b4f58a Mon Sep 17 00:00:00 2001
From: Koen Deforche <koen@emweb.be>
Date: Tue, 21 Apr 2015 21:24:09 +0200
Subject: [PATCH 22/22] Several changes:

    - applied patch from Stefan Ruppert for building on mingw64
---
 src/Wt/WServer                   |    6 ++---
 src/Wt/WServer.C                 |   15 ++++++++++++

diff --git a/src/Wt/WServer b/src/Wt/WServer
index 0be01bd..9d25551 100644
--- a/src/Wt/WServer
+++ b/src/Wt/WServer
@@ -441,7 +441,7 @@ public:
    *
    * \sa setLocalizedStrings()
    */
-  WT_API WLocalizedStrings *localizedStrings() { return localizedStrings_; }
+  WT_API WLocalizedStrings *localizedStrings();
 
 #ifndef WT_TARGET_JAVA
 
@@ -461,7 +461,7 @@ public:
    * This is the logger class used in WApplication::log() and
    * Wt::log() functions.
    */
-  WT_API WLogger& logger() { return logger_; }
+  WT_API WLogger& logger();
 
   /*! \brief Adds an entry to the log.
    *
@@ -477,7 +477,7 @@ public:
 
   WT_API Configuration& configuration();
 
-  WT_API WebController *controller() { return webController_; }
+  WT_API WebController *controller();
 
 #ifndef WT_TARGET_JAVA
   WT_API void scheduleStop();
diff --git a/src/Wt/WServer.C b/src/Wt/WServer.C
index ddf710d..0941fd4 100644
--- a/src/Wt/WServer.C
+++ b/src/Wt/WServer.C
@@ -78,6 +78,11 @@ void WServer::setLocalizedStrings(WLocalizedStrings *stringResolver)
   localizedStrings_ = stringResolver;
 }
 
+WLocalizedStrings *WServer::localizedStrings()
+{
+  return localizedStrings_;
+}
+
 void WServer::setIOService(WIOService& ioService)
 {
   if (ioService_) {
@@ -128,6 +133,11 @@ void WServer::setConfiguration(const std::string& file,
   application_ = application;
 }
 
+WLogger& WServer::logger()
+{
+  return logger_;
+}
+
 WLogEntry WServer::log(const std::string& type) const
 {
   WLogEntry e = logger_.entry(type);
@@ -168,6 +178,11 @@ Configuration& WServer::configuration()
   return *configuration_;
 }
 
+WebController *WServer::controller()
+{
+  return webController_;
+}
+
 bool WServer::readConfigurationProperty(const std::string& name,
 					std::string& value) const
 {
